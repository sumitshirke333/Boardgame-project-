pipeline {
    agent any

    environment {
        // üåç App Details
        IMAGE_NAME = 'boardgame'
        DOCKERHUB_USER = 'sumitshirke369'   // üîê Your Docker Hub username
        EC2_HOST = '13.233.61.40'          // üåê ‚úÖ Updated Worker EC2 public IP
    }

    tools {
        maven 'Maven'   // Make sure Maven is configured in Jenkins Global Tool Config
    }

    stages {
        // 1Ô∏è‚É£ Checkout Code from GitHub
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/sumitshirke333/Boardgame-project-.git'
            }
        }

        // 2Ô∏è‚É£ Build Maven Project
        stage('Build Maven Project') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        // 3Ô∏è‚É£ Build Docker Image
        stage('Build Docker Image') {
            steps {
                sh '''
                docker build -t $DOCKERHUB_USER/$IMAGE_NAME:latest .
                docker images
                '''
            }
        }

        // 4Ô∏è‚É£ Trivy Scan
        stage('Trivy Scan') {
            steps {
                sh '''
                trivy image --severity HIGH,CRITICAL --no-progress $DOCKERHUB_USER/$IMAGE_NAME:latest || true
                '''
            }
        }

        // 5Ô∏è‚É£ Push to Docker Hub
        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_USER/$IMAGE_NAME:latest
                    '''
                }
            }
        }

        // 6Ô∏è‚É£ Deploy to EC2 via SSH + Docker
        stage('Deploy to EC2') {
            steps {
                sshagent(['worker-ssh']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "
                          docker pull $DOCKERHUB_USER/$IMAGE_NAME:latest &&
                          docker stop boardgame || true &&
                          docker rm boardgame || true &&
                          docker run -d --name boardgame -p 8080:8080 $DOCKERHUB_USER/$IMAGE_NAME:latest
                        "
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully! üöÄ App is live on EC2'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs above for details.'
        }
    }
}
